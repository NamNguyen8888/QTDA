<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAVBJREFUSEvt
        ls1tAjEQhfcYKXjFBcnmRAnpIOmElJAS6CTpIOkgkk2UY+gAOggdED/nLcwuDgv2Oic+6QlpbM/TjH+W
        6koOeuQetFrO9cjeM1SOcfU+Nsq9Tmu36wpxjHPqcExuP+5Mbdcx04PsNzrBJfmESjumpnYbo+zbVLmV
        jMN8sMqDQSu5W3AoYOrlkxxH2zmUh0wapOwzh/Z0zRlOB3smE+4VMZdtz97rP42hjrncEq3sI8NpnDSG
        hDkOXBPPrhgntGUUkzf3vwsZ4/I0aPolE54jtJwpLifV1N/jbfI9Tq7U7zFeOKa5jJz2lq3U31XMw6lt
        xOVp9Joq+5JVVYx+U7fi1OE4p71Z1yNGnykefjx9g7YXyLc1puSr0cfxRxyy2xAvsa8Nx6Ze/vRyuAz6
        5nMWM0acU8rAg3Uw/W176y9NMWBevMIr/0dV/QAxVcDWqTdi6AAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAABGdBTUEAALGPC/xhBQAAAYxJREFUSEvt
        VctNxDAQzRGJONoLUpITJdABlEAH0AF0AB1AJ5SwyF60x6UEOiAdwDxn7HWI19iOEZd90ijR8/g5mZ+r
        I2LQ1uqqa9QdrK3lJdN/h17I676Rn32jvqZGHK2xW1l0tXqeHzi1rtncs3sZILRWXKhX/N2qWq+whnfN
        8Tp89aYS6IV618L0ZGoGyvcHH75jajnM34RCSeuPxo+pZXDDHApjrF802pPtuREMVW4r5K09mPYwvQzU
        LgMEUdlMzbCvejkwtRxuK/nC6IY59HHJQOvYyoa4UOuulk/0/kC2M3yo6rOhc+0c/tPQy8Vy6wNaahwY
        yLsc8F58Yv07zk7fLlqxuUFedX59RmvwgS9vyweKikRffDkNGfaYWZ4M/xXIOfXYmPOJb/pViXC5IujN
        mIqFj9vzsKTQ79tGDjlzd4yWPTzutiJHe8ssaRPsNTrQZPowxnyRc4EpZCIHTaYOI+krfwE0jB5TfkyK
        KrUiPXBzHSyy0pd5tB6aHg6w7AHgoLTeERmoqm+B7ldQZqQQwAAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        QIQhAAhCEACEIQA//9k=
</value>
  </data>
</root>